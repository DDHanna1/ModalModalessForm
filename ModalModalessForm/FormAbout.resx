<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WEMhcsFnyzGXuedIFPoD6n//2Q==
</value>
  </data>
</root>